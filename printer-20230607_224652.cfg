[include mainsail.cfg]
[include test_speed.cfg]
[include EBB36.cfg]
[include .config_backup.cfg]
[include Macros/*]
[include Klicky/klicky-probe.cfg]
#[include PIS.cfg]  ##uncomment for inputshaping
[exclude_object]
######
##stuff to fix undervoltage fuckery 
#[include klipper_tmc/autotune_tmc.cfg]
#[include klipper_tmc/motor_data.cfg]
#####
##--------------------------------------------------------------------
[mcu]
canbus_uuid: 4b5ba85b0805

[mcu can0]
canbus_uuid: 97b14605d5f5

[mcu rpi]
serial: /tmp/klipper_host_mcu

##--------------------------------------------------------------------


[printer]
kinematics: corexy
max_velocity: 200  
max_accel: 4300             #Max 4000
max_z_velocity: 15          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

#####################################################################
#   X/Y Stepper Settings
#####################################################################

##  B Stepper - Left
##  Connected to MOTOR_0
##  Endstop connected to DIAG_0
[stepper_x]
step_pin: PF13
dir_pin: !PF12
enable_pin: !PF14
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200  #400 for 0.9 degree stepper
endstop_pin: ^can0:LIMIT_1
position_min: 0
position_endstop: 304.5
position_max: 304.5

##--------------------------------------------------------------------
homing_speed: 100  
homing_retract_dist: 5
homing_positive_dir: true


[tmc5160 stepper_x]
cs_pin: PC4
interpolate: false
run_current:  1.2
sense_resistor: 0.075
stealthchop_threshold: 0
spi_software_sclk_pin: PA5 
spi_software_miso_pin: PA6
spi_software_mosi_pin: PA7 


##  A Stepper - Right
##  Connected to MOTOR_1
##  Endstop connected to DIAG_1
[stepper_y]
step_pin: PG0
dir_pin: !PG1
enable_pin: !PF15
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200  #400 for 0.9 degree stepper
endstop_pin: PG9
position_min: 0
position_endstop: 306.5
position_max: 306.5

##--------------------------------------------------------------------
homing_speed: 100  #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc5160 stepper_y]
cs_pin: PD11
spi_software_sclk_pin: PA5
spi_software_miso_pin: PA6
spi_software_mosi_pin: PA7
interpolate: false
run_current:  1.2
sense_resistor: 0.075
stealthchop_threshold: 0
 
#####################################################################
#   Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left
##  Connected to MOTOR_2
##  Endstop connected to DIAG_2
[stepper_z]
step_pin: PF11
dir_pin: PG3
enable_pin: !PG5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32
endstop_pin: PG6
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
position_endstop: -0.5
position_max: 275
position_min: -7
homing_speed: 8
second_homing_speed: 3
homing_retract_dist: 3

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: PC6
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z1 Stepper - Rear Left
##  Connected to MOTOR_3
[stepper_z1]
step_pin: PG4
dir_pin: !PC1
enable_pin: !PA0
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: PC7
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z2 Stepper - Rear Right
##  Connected to MOTOR_4
[stepper_z2]
step_pin: PF9
dir_pin: !PF10
enable_pin: !PG2
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: PF2
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z3 Stepper - Front Right
##  Connected to MOTOR_5
[stepper_z3]
step_pin: PC13
dir_pin: PF0
enable_pin: !PF1
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32


[tmc2209 stepper_z3]
uart_pin: PE4
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0


#####################################################################
#   Extruder
#####################################################################

##  REPLACED IN EBB36 DELETE ONCE RUNNING
##  Heater - HE0
##  Thermistor - T0
[extruder]
 control = pid
 pid_kp = 26.213
 pid_ki = 1.304
 pid_kd = 131.721
##  Update value below when you perform extruder calibration
##  If you ask for 100mm of filament, but in reality it is 98mm:
##  rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
#rotation_distance: 22.452161589 # 22.6789511   #Bondtech 5mm Drive Gears
##  Use 50:10 for Stealthburner/Clockwork 2
#gear_ratio: 50:10               #BMG Gear Ratio
#microsteps: 32
#full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree
#nozzle_diameter: 0.400
#filament_diameter: 1.75
#heater_pin: ##PA1
#sensor_type: ##PT1000
#sensor_pin: ##PF4
#min_temp: 10
#max_temp: 350
#max_power: 1.0
#min_extrude_temp: 170
#max_extrude_only_distance: 900 #101
#max_extrude_cross_section:50
##  Try to keep pressure_advance below 1.0
#pressure_advance: 0.031
##  Default is 0.040, leave stock
#pressure_advance_smooth_time: 0.040

##  E0 on MOTOR6
#[tmc2209 extruder]
#uart_pin: PE1
#interpolate: false
#run_current: 0.5
#sense_resistor: 0.110
#stealthchop_threshold: 0


#####################################################################
#   Bed Heater
#####################################################################


##  SSR Pin - HE1
##  Thermistor - TB
[heater_bed]
heater_pin: PA1
sensor_type: Generic 3950
sensor_pin: PF3
##  Adjust Max Power so your heater doesn't warp your bed. Rule of thumb is 0.4 watts / cm^2 .
max_power: 1
min_temp: 0
max_temp: 140
#####################################################################
#   Probe
#####################################################################

[probe]
pin: ^can0:LIMIT_2
x_offset: 0
y_offset: 31.5
#z_offset: 0
#speed: 10.0
#samples: 5
#samples_result: median
#sample_retract_dist: 3.0
#samples_tolerance: 0.006
#samples_tolerance_retries: 3
#####################################################################
#   Fan Control
#####################################################################
## CPAP ##
[fan]
pin: rpi:gpio26
max_power: 1.0
cycle_time: 0.002
shutdown_speed: 0
hardware_pwm: false

##  Controller fan - FAN0
[controller_fan controller_fan]
pin: PA8
kick_start_time: 0.5
heater: heater_bed
fan_speed: 0.2

##  Controller fan - FAN0
[controller_fan octoglasses]
pin: PD13
kick_start_time: 0.5
heater: heater_bed
fan_speed: 0.5

#####################################################################
#   LED Control
#####################################################################
## Chamber Lighting - CNC_FAN4
[output_pin caselight]
pin: PD14
pwm:true
shutdown_value: 0
value:0
cycle_time: 0.01

#####################################################################
#   Additional Sensors
#####################################################################
[temperature_sensor chamber]
## Chamber Temperature - T1
sensor_type: Generic 3950
sensor_pin: PF5
min_temp: 0
max_temp: 100
gcode_id: chamber_th

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 18000

#[safe_z_home]
#home_xy_position:246.5,306
#speed:100
#z_hop:10
#z_hop_speed:10

[quad_gantry_level]   
gantry_corners:
   -60,-10
   360,370

points:
   10,10
   10,258.5
   290,258.1
   290,10

speed: 100
horizontal_move_z: 20
retries: 5
retry_tolerance: 0.0075
max_adjust: 10

## BED MESH ##

[bed_mesh]
mesh_min: 10, 10
mesh_max: 290,258.1
horizontal_move_z: 10
probe_count: 7,7
algorithm: bicubic
#mesh_pps: 2, 3
#bicubic_tension: 0.2
speed: 500
#fade_start: 3
#fade_end: 10
#fade_target: 0


[neopixel LIGHTSHOW]
pin: PB0
chain_count: 18
color_order: GRB
#   Set the pixel order required by the LED hardware. Options are GRB,
#   RGB, GRBW, or RGBW. The default is GRB.
initial_RED: 1.0
initial_GREEN: 0.0
initial_BLUE: 1.0
initial_WHITE: 0.0


#####################################################################
#   Macros
#####################################################################
#####
####undervoltage fuckery macros
#[gcode_macro config_tmc_global]
#variable_xy_motor: "ldo-42sth48-2804ah"
# Name of your XY motor's entry in the motor database.
#variable_z_motor: "ldo-42sth48-2004ac"
# Name of your Z motor's entry in the motor database.
#variable_extruder_motor: "ldo-36sth20-1004ahg"
# Name of your extruder motor's entry in the motor database.
#variable_zprobe_x: 248.5
#variable_zprobe_y: 306.5
# Location at which to home Z
#variable_pwm_mode: 1
# Whether to use stealthchop. 1 = on.
#variable_x_sgt: 0
#variable_y_sgt: 0
# Stallguard threshold for sensorless homing. May need configured even if
# not actually using sensorless homing, or autotune won't work right.
#variable_x_sg4: 80
#variable_y_sg4: 80
# Stallguard 4 threshold for mode switching autotune. Should not need tuning.
#variable_autotune_speeds: 1
# Set to 1 to calculate reasonable speed thresholds.
#variable_vsc:   30
# Stealthchop threshold.
#variable_vcool: 60
# Threshold for coolstep. Must be greater than stealthchop threshold.
#variable_vhigh: 175
# Threshold for fullstepping. Must be fast, ideally just under the speed
# at which coolstep selects full current.
#variable_verbose: 1
# Print various information during configuration. 0 = off.
#gcode:



#########
###################
#[static_digital_output disable_max31865]
#pins: PF8
##### undervoltage fuckery macro w/klicky
# Quad Gantry Level
#[gcode_macro QUAD_GANTRY_LEVEL]
#rename_existing: _QUAD_GANTRY_LEVEL
#description: Conform a moving, twistable gantry to the shape of a stationary bed with klicky automount
#gcode:

#    {% set V = printer["gcode_macro _User_Variables"].verbose %}
#    {% if V %}
#        { action_respond_info("QG Level") }
#    {% endif %}
#    SAVE_GCODE_STATE NAME=STATE_G32
 #   {% set RUN_CURRENT = 1.2 %}
#   SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT}
#   SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT}
#    _configure_tmc_autotune SAVE=1 S=stepper_x MOTOR={M} C={RUN_CURRENT} V=48
#    _configure_tmc_autotune SAVE=0 S=stepper_y MOTOR={M} C={RUN_CURRENT} V=48
#    _CheckProbe action=query
#	G90
#    Attach_Probe

#    _QUAD_GANTRY_LEVEL {% for p in params
#            %}{'%s=%s ' % (p, params[p])}{%
#            endfor %}
#    Dock_Probe

#   G0 X150 Y150 Z30 F3600


#### undervoltage fuckery macro
#[gcode_macro G32]
#gcode:
#### from klicky macro ####
# {% set V = printer["gcode_macro _User_Variables"].verbose %}
 #   {% if V %}
  #      { action_respond_info("QG Level") }
  #  {% endif %}
####

   # SAVE_GCODE_STATE NAME=STATE_G32
   # {% set RUN_CURRENT = printer.configfile.settings['tmc5160 stepper_x'].run_current|float %}
   # {% set M = printer["gcode_macro config_tmc_global"].xy_motor %}
    # only save calculations the first time
   # _configure_tmc_autotune SAVE=1 S=stepper_x MOTOR={M} C={RUN_CURRENT} V=48.0
   # _configure_tmc_autotune SAVE=0 S=stepper_y MOTOR={M} C={RUN_CURRENT} V=48.0
   # _CheckProbe action=query #from klicky macro
   # G90
   # G28
   # QUAD_GANTRY_LEVEL
   # G28
    
   # G0 X150 Y150 Z30 F3600

    #--------------------------------------------------------------------
  #  RESTORE_GCODE_STATE NAME=STATE_G32


### original macro
#####[gcode_macro G32]
#gcode:
#    SAVE_GCODE_STATE NAME=STATE_G32
#    G90
#    G28
#    QUAD_GANTRY_LEVEL
#    G28
    
#    G0 X150 Y150 Z30 F3600

    #--------------------------------------------------------------------
 #   RESTORE_GCODE_STATE NAME=STATE_G32

  ###STOCK PRINT START 
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
#[gcode_macro PRINT_START]
#gcode:
 #STATUS_PRINTING
 #   G32                            ; home all axes
 #   G90                            ; absolute positioning
  #  G1 Z20 F3000                   ; move nozzle away from bed
##Tap print start
[gcode_macro _PRIME_NOZZLE]
gcode:
    SAVE_GCODE_STATE NAME=PRIME_NOZZLE_STATE
    M117 Priming
    G90                 ; Absolute coordinates.
    M83                 ; Relative extruder mode.
    G92 E0
    ; Move to start of line.
    G1 Z10 F900
    G1 Y3 X3 F18000
    G1 Z0.2 F900
    ; Print the line.
    G91                ; Relative coordinates.
    G1 X100 E25 F1000  ; Extrude filament 25mm (how much it retracted in PRINT_END).
    G1 Y-2 F1000
    G1 X-60 E9 F1000    ; Print second part of the line.
    G1 E-0.5 F3000      ; Retract to avoid stringing.
    G1 X0.5 E0 F1000    ; Wipe back to break string.
    G1 X-5.5 E0 F1000   ; Wipe forward to break string.
    RESTORE_GCODE_STATE NAME=PRIME_NOZZLE_STATE

[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:

  
    M117 Heating bed
    M190 S{ params.BED }       ; Wait for bed to get to target temperature.
   {% set target_chamber = params.CHAMBER|default("40")|int %}
    M117 Preheating nozzle
    M109 S150                  ; Wait for nozzle to heat to 150C - soften filament, but no oozing.

    M107                       ; Print fan off
  
    G28                        ; Home - G28 or G32 depending on printer.

    SET_DISPLAY_TEXT MSG="QGL"      # Displays info
    QUAD_GANTRY_LEVEL              ; Trident uses Z_TILT_ADJUST, V2 uses QUAD_GANTRY_LEVEL
    G28 Z

  BED_MESH_CLEAR       # Clears old saved bed mesh (if any)


    {% if 'bed_mesh' in printer.configfile.config %}
        BED_MESH_CALIBRATE
    {% endif %}

    M117 Heating nozzle
    M109 S{ params.EXTRUDER }  ; Wait for nozzle to get to target temperature.

    #_PRIME_NOZZLE  ##removed for adaptive purge
    ADAPTIVE_PURGE

    G90                 ; Absolute coordinates.
    M83                 ; Relative extruder mode.
    G92 E0

  SET_DISPLAY_TEXT MSG="Printer goes brr"          # Displays info

    #M117 Printing

###"IMPROVED PRINT START"###

## *** THINGS TO UNCOMMENT: ***
## Bed mesh (2 lines at 2 locations)
## Screw_tilt_adjust if your printer is a Trident
## Quad gantry level if your printer is a V2
## Nevermore - if you have one

#[gcode_macro PRINT_START]
#gcode:
  # This part fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
  #{% set target_bed = params.bed|int %}
 #M117 Preheating nozzle
   # M109 S150                  ; Wait for nozzle to heat to 150C - soften filament, but no oozing.
  #{% set target_extruder = params.EXTRUDER|int %}

 # {% set target_chamber = params.CHAMBER|default("40")|int %}
 # {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
#  {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}

  # Homes the printer, sets absolute positioning and updates the Stealthburner leds.
  #STATUS_HOMING         # Sets SB-leds to homing-mode
  #G28                   # Full home (XYZ)
  #G90                   # Absolut position

  ##  Uncomment for bed mesh (1 of 2)
 # BED_MESH_CLEAR       # Clears old saved bed mesh (if any)

  # Checks if the bed temp is higher than 90c - if so then trigger a heatsoak.
  #{% if params.BED|int > 90 %}
  #  SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Displays info
  #  STATUS_HEATING                                      # Sets SB-leds to heating-mode
   # M106 S255                                           # Turns on the PT-fan

    ##  Uncomment if you have a Nevermore.
  #  SET_PIN PIN=nevermore VALUE=1                      # Turns on the nevermore

   # G1 X{x_wait} Y{y_wait} Z15 F9000                    # Goes to center of the bed
    #M190 S{target_bed}                                  # Sets the target temp for the bed
    #SET_DISPLAY_TEXT MSG="Heatsoak: {target_chamber}c"  # Displays info
    #TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}   # Waits for chamber to reach desired temp

  # If the bed temp is not over 90c, then it skips the heatsoak and just heats up to set temp with a 5min soak
  #{% else %}
   # SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Displays info
   # STATUS_HEATING                                      # Sets SB-leds to heating-mode
   # G1 X{x_wait} Y{y_wait} Z15 F9000                    # Goes to center of the bed
   # M190 S{target_bed}                                  # Sets the target temp for the bed
   # SET_DISPLAY_TEXT MSG="Soak for 5min"                # Displays info
    #G4 P300000                                          # Waits 5 min for the bedtemp to stabilize
  #{% endif %}

  # Heating nozzle to 150 degrees. This helps with getting a correct Z-home
  #SET_DISPLAY_TEXT MSG="Hotend: 150c"          # Displays info
  #M109 S150                                    # Heats the nozzle to 150c

  ##  Uncomment for V2 (Quad gantry level AKA QGL)
 # SET_DISPLAY_TEXT MSG="QGL"      # Displays info
 # STATUS_LEVELING                 # Sets SB-leds to leveling-mode
#  quad_gantry_level               # Levels the buildplate via QGL
 # G28 Z                           # Homes Z again after QGL

  ##  Uncomment for Klicky auto-z
  #CALIBRATE_Z                                 # Calibrates Z-offset with klicky
  #SET_DISPLAY_TEXT MSG="Z-offset"             # Displays info

  ##  Uncomment for bed mesh (2 of 2)
 # SET_DISPLAY_TEXT MSG="Bed mesh"    # Displays info
 # STATUS_MESHING                     # Sets SB-leds to bed mesh-mode
 # bed_mesh_calibrate                 # Starts bed mesh

  # Heats up the nozzle up to target via data from slicer
#  SET_DISPLAY_TEXT MSG="Hotend: {target_extruder}c"             # Displays info
 # STATUS_HEATING                                                # Sets SB-leds to heating-mode
#  G1 X{x_wait} Y{y_wait} Z15 F9000                              # Goes to center of the bed
#  M107                                                          # Turns off partcooling fan
 # M109 S{target_extruder}                                       # Heats the nozzle to printing temp

  # Gets ready to print by doing a purge line and updating the SB-leds
#  SET_DISPLAY_TEXT MSG="Printer goes brr"          # Displays info
 # STATUS_PRINTING                                  # Sets SB-leds to printing-mode
#  G0 X{x_wait - 50} Y4 F10000                      # Moves to starting point
 # G0 Z0.4                                          # Raises Z to 0.4
 # G91                                              # Incremental positioning 
#  G1 X100 E20 F1000                                # Purge line
 # G90                                              # Absolut position

#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
[gcode_macro PRINT_END]
gcode:

    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5.0 F1800                 ; retract filament
    
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    G91
    G0 Z10
    G90
    M107                                     ; turn off fan
   
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END
   

##
#[gcode_macro G28]
#: G28 homing with SB LED status
#rename_existing: G2828
#gcode:
 
 # G2828 { rawparams }



[gcode_macro UPDATE_IDLE_TIMEOUT]
description: Send `UPDATE_IDLE_TIMEOUT [H=<value>] [M=<value>] [S=<value>] ` to set the Hours, Minutes, and Seconds for Idle_Timout. Passing no paramaters will return it to the config default value.
gcode:
	{% set Hours   = params.H|default(0)|int %}
    {% set Minutes = params.M|default(0)|int %}
    {% set Seconds = params.S|default(0)|int %}
    {% set DEFAULT = printer.configfile.settings.idle_timeout.timeout|int %}

	{% set TIME = ((Hours*3600) + (Minutes*60) + (Seconds))|int %}
	
	{% if TIME == 0 %} # No time was entered
        {% set TIME = DEFAULT %}
	{% endif %}
	set_idle_timeout timeout={TIME|int}


# BBL arc command
[gcode_arcs]
resolution: 0.1

[gcode_macro m201]
gcode:
  {% if 'X' in params or 'Y' in params %}
    {% set accel = (params.X|default(params.Y)|float,
                    params.Y|default(params.X)|float)|min %}
      SET_VELOCITY_LIMIT ACCEL={accel} ACCEL_TO_DECEL={accel * 0.5}
  {% else %}
    SET_VELOCITY_LIMIT
  {% endif %}

[gcode_macro m203]
gcode:
  {% if 'X' in params or 'Y' in params %}
    {% set speed = (params.X|default(params.Y)|float,
                       params.Y|default(params.X)|float)|min %}
    SET_VELOCITY_LIMIT VELOCITY={speed}
  {% else %}
    SET_VELOCITY_LIMIT
  {% endif %}

[gcode_macro M205]
gcode:
  {% if 'X' in params or 'Y' in params %}
    {% set corner_speed = (params.X|default(params.Y)|float,
                       params.Y|default(params.X)|float)|min %}
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={corner_speed}
  {% else %}
    SET_VELOCITY_LIMIT
  {% endif %}

[gcode_macro M900]
gcode:
      SET_PRESSURE_ADVANCE ADVANCE={params.K}


##modified homing macros

#[gcode_macro _HOME_X]
#gcode:
#    {% set HOME_CURRENT = 1.2 %}
 #   SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
#   SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

    # Home
#    G28 X

    # Set current during print
#    {% set RUN_CURRENT = 1.4 %}
#    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT}
#    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT}
 #   {% set M = printer["gcode_macro config_tmc_global"].xy_motor %}
    # only save calculations the first time
#    _configure_tmc_autotune SAVE=1 S=stepper_x MOTOR={M} C={RUN_CURRENT} V=48.0
#    _configure_tmc_autotune SAVE=0 S=stepper_y MOTOR={M} C={RUN_CURRENT} V=48.0

    # Pause for AT1
#    G4 P150

    # Move away
#    G91
#    G1 X-20 F1200
#    G90

    # Wait just a second… (give StallGuard registers time to clear)
#    G4 P700


#
#[gcode_macro _HOME_Y]
#gcode:
 #   {% set HOME_CURRENT = 1.2 %}
 #   SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
 #   SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

    # Home
 #   G28 Y

    # Set current during print
    # Set current during print
 #   {% set RUN_CURRENT = 1.4 %}
#    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT}
#    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT}
#    {% set M = printer["gcode_macro config_tmc_global"].xy_motor %}
    # only save calculations the first time
#    _configure_tmc_autotune SAVE=1 S=stepper_x MOTOR={M} C={RUN_CURRENT} V=48.0
#    _configure_tmc_autotune SAVE=0 S=stepper_y MOTOR={M} C={RUN_CURRENT} V=48.0


    # Pause for AT1
#    G4 P150

    # Move away
#    G91
#    G1 Y-20 F1200
 #   G90

    # Wait just a second… (give StallGuard registers time to clear)
#    G4 P700


















#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 38.679
#*# pid_ki = 1.289
#*# pid_kd = 290.089
#*#
#*# [extruder]
#*#
#*# [probe]
#*# z_offset = -0.705
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 52.8
#*# shaper_type_y = 2hump_ei
#*# shaper_freq_y = 68.8
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.055000, 0.032500, 0.058750, 0.085000, 0.057500
#*# 	0.033750, -0.002500, -0.022500, -0.006250, 0.010000
#*# 	0.027500, 0.001250, -0.016250, 0.012500, 0.042500
#*# 	0.061250, 0.020000, -0.008750, 0.068750, 0.035000
#*# 	0.068750, 0.033750, 0.041250, 0.078750, 0.045000
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 10.0
#*# max_x = 290.0
#*# min_y = 10.0
#*# max_y = 290.0
